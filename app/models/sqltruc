/*alter table users
add constraint checkusers 
check (sex='F' or sex='M')

alter table student
add constraint checkstudent
check (expireddate > getdate())

alter table student
add constraint checkstudenttype
check (studenttype='T' or studenttype='O')

alter table users
add constraint uniqueuname
unique (uname)*/


/*create procedure insertinuser
(@uname VARCHAR(20),
	@sex CHAR(1),
	@bdate date,
	@address NVARCHAR(30),
	@password CHAR(32) ,
	@username NVARCHAR(30) )
as
begin try
insert into Users values (@uname,@sex,@bdate,@address,@password,@username);
end try
begin catch
	select ERROR_MESSAGE() as error
end catch*/

/*create procedure insertinteacher
(
@teacherid int,
@balance DECIMAL)
as
begin
insert into Teacher values (@teacherid,@balance);
select ERROR_MESSAGE()
end*/

	

/*create procedure insertinstudent
(	@studentid int,
	@studenttype CHAR(1),
	@trialid int ,
	@expireddate date)
as
begin try
insert into Student values (@studentid,@studenttype,@trialid,@expireddate);
end try
begin catch
	select ERROR_MESSAGE() as error
end catch*/



--exec insertinuser 'abc','M','05/08/1999',N'Long Xuyên','900150983cd24fb0d6963f7d28e17f72',N'Trúc'
--select * from Users

create trigger insertteacher on Teacher 
after insert,update
as
begin
	if ( exists (select * from inserted as i join users as e on i.teacherid = e.userid
					where year(getdate())-year(e.bdate) < 18 ))
		begin 
		declare @insertid int
		select @insertid = teacherid from inserted
		-- xử lý nếu tuổi gv < 18
		delete from teacher where teacherid=@insertid
		delete from users where userid=@insertid
		raiserror('Age of Teachers must be over 18',12,2)
		select ERROR_MESSAGE()
		end
end
drop trigger insertteacher
--SELECT * FROM users
---insert into teacher values(5,NULL)



/*CREATE FUNCTION checklogin
(@name VARCHAR(20), @password CHAR(32))	
returns bit 
as
begin 
if exists( select * from users where uname=@name and password =@password)
	return 1;
return 0;
end;*/

/*CREATE FUNCTION checknameregisted
(@name VARCHAR(20))	
returns bit 
as
begin 
if exists( select * from users where uname=@name)
	return 1;
return 0;
end;*/



/*alter table phone
add constraint fk_phone_user_userid foreign key (userid)
references users(userid)
alter table Student
add constraint fk_student_user_studentid foreign key (studentid)
references users(userid)
alter table Document 
add constraint fk_document_lesson_courseid foreign key (courseid,lid)
references Lesson(courseid,lid)
alter table Teacher
add constraint fk_teacher_user_teacherid foreign key (teacherid)
references users(userid)
alter table Student 
add constraint dk_student_course_trialid foreign key (trialid)
references course(courseid)*/



--exec insertinuser 'abc','M','05/08/2018',N'Long Xuyên','900150983cd24fb0d6963f7d28e17f72',N'Trúc'--
--insert into teacher values (12,NULL)

/*create trigger updateexpiredate on Student
after insert,update
as
begin
	declare @inserttype char(1)
	select @inserttype = studenttype from inserted
	declare @trial int
	select @trial = trialid from inserted
	if @inserttype='T'
		begin
			if @trial is not NULL
				begin
					update Student
					set expireddate = getdate() + day(7)
					from inserted, Student as s
					where s.studentid = inserted.studentid
				end
		end
end*/
--exec insertinuser 'abcd','M','05/08/2018',N'Long Xuyên','900150983cd24fb0d6963f7d28e17f72',N'Trúc'
--exec dbo.insertinuser 'baophuc','M','2014-02-09',NULL,'202cb962ac59075b964b07152d234b70',N'bao phuc'
--exec dbo.insertinuser 'sacccsaa','M','2014-02-09',NULL,'03c7c0ace395d80182db07ae2c30f034',N's' 
--insert into Teacher values(3,NULL)
exec dbo.insertinteacher 1037,NULL
select * from users
select * from teacher
exec dbo.insertinuser 'fdxxd','M','2014-02-09',NULL,'03c7c0ace395d80182db07ae2c30f034',N's'
delete from Teacher
select userid from Users where (userid=1038)