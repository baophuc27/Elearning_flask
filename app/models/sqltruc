/*alter table users
add constraint checkusers 
check (sex='F' or sex='M')

alter table student
add constraint checkstudent
check (expireddate > getdate())

alter table student
add constraint checkstudenttype
check (studenttype='T' or studenttype='O')

alter table users
add constraint uniqueuname
unique (uname)*/

create procedure insertinuser
(@uname VARCHAR(20),
	@sex CHAR(1),
	@bdate date,
	@address NVARCHAR(30),
	@password CHAR(32) ,
	@username NVARCHAR(30) )
as

begin 

if len(@username) < 3
begin
raiserror('Length of Display name must be greather than 3',11,2)
return;
end
if len(@username) > 30
begin
raiserror('Length of Display name must be less than 30',11,2)
return;
end
if len(@uname) < 3
begin
raiserror('Length of uname must be greather than 3',11,2)
select ERROR_MESSAGE()
return;
end
if len(@uname) > 20
begin
raiserror('Length of uname must be less than 20',11,2)
return;
end
if getdate()<@bdate
begin
raiserror('Day of birthday greater than now',11,2)
return;
end
if len(@address)> 30
begin
raiserror('Length of address must be less than 30',11,2)
return;
end
else
insert into Users values (@uname,@sex,@bdate,@address,@password,@username);
end 

/*create procedure insertinteacher
(
@teacherid int,
@balance DECIMAL)
as
begin
insert into Teacher values (@teacherid,@balance);
select ERROR_MESSAGE()
end*/

	

/*create procedure insertinstudent
(	@studentid int,
	@studenttype CHAR(1),
	@trialid int ,
	@expireddate date)
as
begin try
insert into Student values (@studentid,@studenttype,@trialid,@expireddate);
end try
begin catch
	select ERROR_MESSAGE() as error
end catch*/



--exec insertinuser 'abc','M','05/08/1999',N'Long Xuyên','900150983cd24fb0d6963f7d28e17f72',N'Trúc'
--select * from Users

/*create trigger insertteacher on Teacher 
after insert,update
as
begin
	if ( exists (select * from inserted as i join users as e on i.teacherid = e.userid
					where year(getdate())-year(e.bdate) < 18 ))
		begin 
		declare @insertid int
		select @insertid = teacherid from inserted
		-- xử lý nếu tuổi gv < 18
		delete from teacher where teacherid=@insertid
		delete from users where userid=@insertid
		raiserror('Age of Teachers must be over 18',12,2)
		select ERROR_MESSAGE()
		end
end
drop trigger insertteacher
--SELECT * FROM users
---insert into teacher values(5,NULL)*/



/*CREATE FUNCTION checklogin
(@name VARCHAR(20), @password CHAR(32))	
returns bit 
as
begin 
if exists( select * from users where uname=@name and password =@password)
	return 1;
return 0;
end;*/

/*CREATE FUNCTION checknameregisted
(@name VARCHAR(20))	
returns bit 
as
begin 
if exists( select * from users where uname=@name)
	return 1;
return 0;
end;*/
CREATE FUNCTION checkcanupdate
(@userid int,
@username NVARCHAR(30),
@sex CHAR(1),
@bdate date,
@address NVARCHAR(30))

returns bit 
as
begin 
if len(@username) < 3 OR len(@username)>30
	return 0;
if getdate() < @bdate
	return 0

if len(@address) > 30
	return 0
if exists (select * from Teacher where teacherid=@userid)
begin
if (year(getdate())-year(@bdate) <18)
	return 0
end
return 1;
end;




/*alter table phone
add constraint fk_phone_user_userid foreign key (userid)
references users(userid)
on delete cascade on update cascade 
alter table Student
add constraint fk_student_user_studentid foreign key (studentid)
references users(userid)
on delete cascade on update cascade 

alter table Document 
add constraint fk_document_lesson_courseid foreign key (courseid,lid)
references Lesson(courseid,lid)
alter table Teacher
add constraint fk_teacher_user_teacherid foreign key (teacherid)
references users(userid)
on delete cascade on update cascade 

alter table Student 
add constraint dk_student_course_trialid foreign key (trialid)
references course(courseid)*/



--exec insertinuser 'abc','M','05/08/2018',N'Long Xuyên','900150983cd24fb0d6963f7d28e17f72',N'Trúc'--
--insert into teacher values (12,NULL)

/*create trigger updateexpiredate on Student
after insert,update
as
begin
	declare @inserttype char(1)
	select @inserttype = studenttype from inserted
	declare @trial int
	select @trial = trialid from inserted
	if @inserttype='T'
		begin
			if @trial is not NULL
				begin
					update Student
					set expireddate = getdate() + day(7)
					from inserted, Student as s
					where s.studentid = inserted.studentid
				end
		end
end*/
--exec insertinuser 'abcd','M','05/08/2018',N'Long Xuyên','900150983cd24fb0d6963f7d28e17f72',N'Trúc'
--exec dbo.insertinuser 'baophuc','M','2014-02-09',NULL,'202cb962ac59075b964b07152d234b70',N'bao phuc'
--exec dbo.insertinuser 'sacccsaa','M','2014-02-09',NULL,'03c7c0ace395d80182db07ae2c30f034',N's' 
--insert into Teacher values(3,NULL)
/*exec dbo.insertinteacher 1037,NULL
select * from users
select * from teacher
exec dbo.insertinuser 'fdxxd','M','2014-02-09',NULL,'03c7c0ace395d80182db07ae2c30f034',N's'
delete from Teacher
select userid from Users where (userid=1038)*/

/*CREATE FUNCTION checkphone
(@phone VARCHAR(11))	
returns bit 
as
begin 
if len(@phone) < 9
	return 0;
return 1;
end;*/

/*create procedure insertinphone
(	@uname VARCHAR(20), 
	@phone VARCHAR(11)
)
as
begin try
declare @id int
select @id = userid from users where (uname=@uname)
insert into Phone values (@id,@phone);
end try
begin catch
	select ERROR_MESSAGE() as error
end catch*/

--exec insertinphone 'd','0916465507'

/*CREATE TABLE Phone(
	phoneid INT IDENTITY(1,1) NOT NULL,
	userid INT NOT NULL,
	phone VARCHAR(11),
	PRIMARY KEY (phoneid),
);*/

/*create procedure searchbynameteacher
(	@username NVARCHAR(30), 
	@orderby NVARCHAR(30),
	@fromcount int
)
as
begin try

select * from(
select username, sex,bdate,address, count(*) as totalcourse,Users.userid
from Users, Teacher,Teach
where (Users.username LIKE '%'+@username +'%') 
and Teacher.teacherid = Users.userid and Teach.teacherid = Teacher.teacherid
group by Teach.teacherid,username,sex,bdate,address,Users.userid
having count(*) >= @fromcount

union
select username, sex,bdate,address, 0 as totalcourse,Users.userid
from Users, Teacher
where @fromcount=0 and (Users.username LIKE '%'+@username +'%') 
and Teacher.teacherid = Users.userid and Teacher.teacherid not in (select teacherid from Teach)
) t
order by 
	case @orderby
	when 'gender' then t.sex
	when 'address' then t.address
	when 'name' then t.username
	end;

end try
begin catch
	select ERROR_MESSAGE() as error
end catch*/


exec dbo.insertinuser 'fdxxeeed','M','1999-02-09','Long Xuyen','03c7c0ace395d80182db07ae2c30f034',N'Nguyễn Thị Hương'
exec dbo.insertinuser 'fdxxeeede','M','1999-02-09',NULL,'03c7c0ace395d80182db07ae2c30f034',N'Thị Mai'
exec dbo.insertinuser 'fdxeeexd','M','1999-02-09',NULL,'03c7c0ace395d80182db07ae2c30f034',N'Trần Thị Giang'
exec dbo.insertinuser 'fsssdx3xd','M','1999-02-09','Hồ chí minh','03c7c0ace395d80182db07ae2c30f034',N'Thị A'
exec dbo.insertinuser 'fd3xxd','M','1999-02-09',NULL,'03c7c0ace395d80182db07ae2c30f034',N'Thành Giang'

select *from Student

exec dbo.insertinteacher 1056,NULL
exec dbo.insertinteacher 1057,NULL
exec dbo.insertinteacher 1058,NULL
exec dbo.insertinteacher 1059,NULL
exec dbo.insertinteacher 1060,NULL

exec dbo.insertinstudent 1064,T,NULL,NULL
exec dbo.insertinstudent 1065,O,NULL,NULL
exec dbo.insertinstudent 1066,O,NULL,NULL
exec dbo.insertinstudent 1067,T,NULL,NULL


insert into Teach values (1056,1)
insert into Teach values (1056,2)
insert into Teach values (1056,3)
insert into Teach values (1057,4)
insert into Teach values (1057,5)

exec dbo.searchbynamestudent N'Thị','studenttype'


/*create procedure searchbynamestudent
(	@username NVARCHAR(30), 
	@orderby NVARCHAR(30)
)
as
begin try

select username, sex,bdate,address, studenttype,userid
from Users, Student
where (Users.username LIKE '%'+@username +'%') 
and Users.userid = Student.studentid
order by 
	case @orderby
	when 'gender' then Users.sex
	when 'address' then Users.address
	when 'name' then Users.username
	when 'studenttype' then Student.studenttype
	end;

end try
begin catch
	select ERROR_MESSAGE() as error
end catch*/

drop procedure searchbynamestudent


select * from Users
select  * from Teacher



create procedure updateuser
(	
@userid int,
@username NVARCHAR(30), 
@sex char(1),
@bdate date,
@address NVARCHAR(30)
)
as
begin
update Users
set username = @username ,sex=@sex, bdate = @bdate,address=@address
where userid = @userid
end



